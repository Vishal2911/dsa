
Here are several problem statements that focus on arrays and slices in Go (Golang). These problems range from basic to more advanced levels and are designed to help you practice and understand the concepts and operations related to arrays and slices.

Problem Statement 1: Find the Largest and Smallest Element
Task:
Write a Go function that takes an array of integers and returns the largest and smallest elements.

Input:
An array of integers, e.g., [3, 5, 7, 2, 8, -1, 4, 10, 12].

Output:
Largest: 12, Smallest: -1

Problem Statement 2: Sum of Array Elements
Task:
Write a Go function that calculates the sum of all elements in an array of integers.

Input:
An array of integers, e.g., [1, 2, 3, 4, 5].

Output:
Sum: 15

Problem Statement 3: Reverse an Array
Task:
Write a Go function that takes an array and returns a new array with the elements in reverse order.

Input:
An array of integers, e.g., [1, 2, 3, 4, 5].

Output:
Reversed Array: [5, 4, 3, 2, 1]







Problem Statement 7: Find the Second Largest Element
Task:
Write a Go function that finds the second largest element in an array of integers.

Input:
An array of integers, e.g., [1, 2, 3, 4, 5].

Output:
Second Largest: 4

Problem Statement 8: Check if an Array is a Subset of Another
Task:
Write a Go function that checks if one array is a subset of another.

Input:
Two arrays of integers, e.g., [1, 2, 3] and [1, 2, 3, 4, 5].

Output:
Is Subset: True

Problem Statement 9: Merge and Sort Two Arrays
Task:
Write a Go function that merges two sorted arrays into a single sorted array.

Input:
Two sorted arrays of integers, e.g., [1, 3, 5] and [2, 4, 6].

Output:
Merged and Sorted Array: [1, 2, 3, 4, 5, 6]

Problem Statement 10: Find the Longest Increasing Subsequence
Task:
Write a Go function that finds the longest increasing subsequence in an array.

Input:
An array of integers, e.g., [10, 22, 9, 33, 21, 50, 41, 60, 80].

Output:
Longest Increasing Subsequence: [10, 22, 33, 50, 60, 80]